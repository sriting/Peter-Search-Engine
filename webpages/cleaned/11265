11265
www.ics.uci.edu/~aburtsev/143A/index.html
143A Principles of Operating Systems Home 143A Principles of Operating Systems Fall 2018, University of California, Irvine Instructor: Anton Burtsev Email: aburtsev at uci at edu Office: DBH 3066 Class time/place: Tue/Thu, 2:00 pm--3:20 pm (ALP 1300) Discussion time/place: Mon 5:00 pm--5:50 pm (HSLH 100A) Anton's office ours: Fri 4:00-5:00pm (DBH 3066) TAs' office ours: Mon, Wed 1:00-2:00pm (ICS 464C) Mailing list (general announcements): cs143a-F18@classes.uci.edu Piazza (discussion and questions): https://piazza.com/uci/fall2018/compsci143a/home Canvas (homework submission): https://canvas.eee.uci.edu/courses/12602 Grading policy: Homework: 60%, midterm exam: 15%, final exam: 25% of your grade (all grades curved). Late homework policy: You can submit late homework 3 days after the deadline for 60% of your grade. Previous years: 143A Fall 2017. Andromeda Vagrant xv6 setup instructions. Additional resources: References. Schedule September 27: Lecture 01 - Introduction (video). Reading: OSTEP: 2 Introduction. Source code: xv6 hello word on bare metal (Note, the minimal "Hello world" demo is on the bm-hello branch). October 1: Discussion: Discussion 01 - Basic shell commands October 2: Lecture 01 - Introduction (Continued) (video). October 4: Lecture 02 - OS Interfaces (Video). Reading: xv6: Chapter 0: Operating system interfaces. Reading: OSTEP: Chapter 5: Interlude: Process API Video: AT&T Archives: The UNIX Operating System HW1: OS Interfaces and Shell (due Thursday, October 18, 11:59pm Pacific Time) October 8: Discussion: Discussion 02 - Typecast and Pointers ( Video ). Code: stc.c, ptr.c October 9: Lecture 03 - Calling conventions (Video). Source: Simple example of calling conventions. Reading: x86 Assembly Guide, and Wikipedia: x86 calling conventions October 11: Lecture 04 - Linking and Loading (Video). Source code examples: Source (look for the readme.txt for how to compile and use the tools, e.g., objdump, readelf) Reading: OSTEP: Chapter 13: The Abstraction: Address Spaces Optional reading: This lecture is mostly based on the material of this book: Linkers and Loaders by John R. Levine. (You don't have to read it, we will not ask questions that require detailed knowledge of this topic, however, if you feel interested, take a look). Optional reading: OS 0 to 1: Chapter 4: x86 assembly and C. Optional reading: OS 0 to 1: Chapter 5: The Anatomy of a Program. Optional reading: Load-time relocation of shared libraries. Optional reading: Position Independent Code (PIC) in shared libraries . October 15: Discussion: Discussion 03 - Pipes and Fork - video . Pipe Figure: Pipe.jpg October 16: Lecture 05 - Address translation (Video). Reading: OSTEP: Chapter 18 Paging: introduction: only Sections 18.1 - 18.3 Reading: OSTEP: Chapter 20: only Section 20.3 Multi-level Page Tables Reading: Intel-64 and IA-32 architectures software developer's manual volume 3A: System programming guide, part 1 (Chapter 3: 3.1-3.4.5 and Chapter 4: 4.2-4.3) October 18: Lecture 05 - Address translation (part 2) (Video). October 22: Discussion: Discussion 04 - Booting Xv6 October 23: Lecture 06 - System boot (Video). Reading: Appendix B: The boot loader and Chapter 1: Code: the first address space. Reading (optional): How Does an Intel Processor Boot? Reading (optional): Intel SGX explained (sections 2.9.1 The Motherboard, 2.9.2 The Intel Management Engine (ME), and 2.13 Platform Initialization (Booting)) HW2: Boot xv6 (due Tuesday, November 6, 11:59pm Pacific Time) October 25: Lecture 08 - System Init (Video and video of the last 5 minutes). Reading: Chapter 1: Operating system organization and Chapter 2: Page tables. October 29: Discussion: QEMU and GDB ( Video ). October 30: Lecture 8 - Creating processes (Video). Reading: Chapter 2: Page tables. November 1: Lecture 9 - Interrupts (Video). Reading: Chapter 3: Traps, interrupts and drivers. November 5: Discussion: High-level recap of what is going on in the class (Video (very good quality) and same content, but mediocre quality). November 6: Lecture 9 - Interrupts (continued) and System Calls (Video). Reading: Chapter 3: Traps, interrupts and drivers. November 8: Lecture 9 - Interrupts (continued 2): System Calls (Video). Reading: Chapter 3: Traps, interrupts and drivers. November 13: Lecture - Midterm review (Video). . Reading: Example midterms from previous years: 2017 fall, 2017 winter. November 15: Midterm exam November 17: HW3: System calls (due Tuesday, November 27, 11:59pm Pacific Time) HW4: POSIX threads (due Thursday, December 6, 11:59pm Pacific Time) November 20: Lecture 10 - Context switch (Video). Reading: Chapter 1. Subsection: Running the first process, Chapter 5 - Scheduling (up until Drivers). November 26: Discussion: System Call in xv6 . November 27: Lecture 10 - Context Switch (continued) (Video). Reading: Chapter 1. Subsection: Running the first process, Chapter 5 - Scheduling (up until Drivers). November 29: Lecture 11 - Synchronization(Video). Reading: xv6: Chapter 4: Locking and synchronization December 3: Discussion: Threads in xv6 . December 4: Lecture 12 - File System (Intro, Buffer Cache, Logging) (Video). Reading: xv6: Chapter 6: File System Reading: OSTEP: Chapter 40: File System Implementation December 6: Lecture 12 - File System (Logging, Inodes, Naming) (Video). Reading: xv6: Chapter 6: File System Reading: OSTEP: Chapter 40: File System Implementation December 13: Final exam Thu, Dec 13, 1:30-3:30pm (examples from previous years) Class overview 143A teaches the fundamentals of operating systems. You will study, in detail, virtual memory, kernel and user mode, system calls, threads, context switches, interrupts, interprocess communication, coordination of concurrent activities, and the interface between software and hardware. Most importantly, you will study the interactions between these concepts, and how to manage the complexity introduced by the interactions. To master the concepts, 143A is organized in as a series of lectures, and homeworks. The lectures (and the book readings) familiarize you with the main concepts. The homrworks force you to understand the concepts at a deep level. The lectures are based on xv6 (x86 version 6), which is a modern re-implementation of one of the early UNIX operating systems, specifically Unix Version 6 which was developed in the 1970s, on the modern hardware. xv6 is only 9,000 lines of C code, but it can run real processes, and perform many functions of a traditional operating system, e.g., Windows, Linux, and Mac OS. Due to its small size, it is possible to read the source code and understand the entire operating system. Moreover, xv6 is accompanied by a book describing its architecture (and a printout of its source code). Homework assignments will help you to deepen the understanding of the principles and internal organization of a simple, but real operating system. You may wonder why we are studying an operating system that resembles Unix v6 instead of the latest and greatest version of Linux, Windows, or BSD Unix. xv6 is big enough to illustrate the basic design and implementation ideas in operating systems. On the other hand, xv6 is far smaller than any modern production operating systems, and correspondingly easier to understand. xv6 has a structure similar to many modern operating systems; once you've explored xv6 you will find that much is familiar inside kernels such as Linux. Prerequisites Xv6 is implemented in C, so you're expected to be familiar with the C programming language. Xv6 runs in the QEMU simulator and on bare-metal. You're expected to be familiar with the basics of Linux environment. Books The class is based on two books that are freely available from the authors: Operating Systems: Three Easy Pieces (free, available online). Remzi H. Arpaci-Dusseau and Andrea C. Arpaci-Dusseau Xv6 a Simple, Unix-like Teaching Operating System (free, available online). Russ Cox, Frans Kaashoek, Rober Morris Additional resources Intel 64 and IA-32 Architectures Software Developer's Manual (Combined volumes) Operating Systems: From 0 to 1 (PDF). PC Assembly Language, Paul A. Carter, November 2003. All documents used in this class. Updated: September, 2018