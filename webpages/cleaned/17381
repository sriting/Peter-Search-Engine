17381
www.ics.uci.edu/~jmoorkan/vhdlref/contents.html
VHDL Reference Guide (Index) This is Google's cache of contents.html. It is a snapshot of the page as it appeared on Sep 24, 2009 06:51:21 GMT. The current page could have changed in the meantime. Learn more Text-only version These terms only appear in links pointing to this page: vhdl reference guide vdlande Index Subject See also 'active 'ascending 'delayed 'driving_value 'event 'high For 'image 'image(literal) 'instance_name 'last_active 'last_event 'last_value 'left 'length 'low For 'path_name 'quiet(T) 'range For 'reverse_range 'right 'simple_name 'stable(T) 'transaction 'value 'value(string) 'X' abs absolute access Add after Sequential Signal Assignments Aggregates Arrays Alias Declaration all Configuration Declaration & Specification Analysis and Architecture Definitions Array types Arrays Type Declaration Assert Statement assignment association, named Aggregrates association, positional Aggregrates Attributes binary binding binding, default Configuration Specification bit bit_vector arrays Block Statement boolean buffer bus Block Statement Case Statement character Literals compilation Component Component Declaration Component Instantiation concatenation Operators Concurrent Signal Assignment Concurrent Statements Conditional Signal Assignment Block Statement Configuration Declaration Configuration Specification configuration Definitions & Component Declaration Constant Declaration constant constant, deferred Package & Package Body Contents Page Context Clause conversion_function deferred Package Body delay_length Design_file Design_Library Design Unit direct instantiation Configuration Specification divide drivers Elaboration else elsif endfile Entity Definitions equality error Exit Statement While Loop exponentiation failure File Declaration file for Component Instantiation for, generate function Definitions & Package Body Generate Statement generic map Component Instantiation Generics Component Declaration & Entity groups Package guard condition guarded block guarded resolved signal guarded signals hex identifiers identifiers, extended If Statement Generate impure in File Declaration & Procedures inequality inertial Conditional, Selected & Sequential Signal Assignments initial value Variable Declaration inout Procedures integer label Library Clause Use Library Unit Literals literals, numeric loop Exit Loop, for Exit Loop, Infinite Loop, While Exit mod Mode File Declaration modulus multiply Names nand natural Next Statement nor not note Null Statement octal open open, text Operators operators, logical operators, relational or others Case, Configuration Declaration & Specification, Selected Signal Assignment out File Declaration & Procedures overloaded function Overloading Package Package Body port map Configuration Declaration, Constant Declaration Ports Component & Signal Declarations positive Primary Unit Procedure Definitions & Package Body Process Definitions process, clocked process, combinational process, equivalent process, postpned pure Qualification Qualified Expressions range read readline real Records register inference registers Signal Declaration reject time Conditional, Selected & Sequential Signal Assignments rem remainder report Resolution return rol ror rotate Scalar Scope Secondary select Selected Signal Assignment selected name sensitivity list Sequential Signal Assignment Sequential Statements severity shift Signal Declaration signal signal kind sla slices Alias sll sra srl std std_logic std_logic_1164 Subtype & File Declarations std_logic_vector Arrays std_ulogic String subtract Subtype Declaration subtypes testbench text textio then time transport tristate buffers Type Conversion Type Declaration type, resolved Concurrent Signal Asignment types, closely related types, composite types, enumerated types, physical Literals unaffected Selected Signal Assignment unconstrained until Use Clause Package use Configuration Specification UX01 value Variable Assignment Variable Declaration variables variables, shared Architecture & Package Wait Statement Process & While warning when Exit While with work write writeline X01 X01Z xor