14202
www.ics.uci.edu/~dock/manuals/python/MOL2.html
Python: module MOL2 MOL2 index /home/dock/programs/MOL2/MOL2.py Modules re string sys Classes __builtin__.list(__builtin__.object) molecule mol2reader class mol2reader Iterator that reads molecules from a file object Methods defined here: __init__(self, infile) __iter__(self) next(self) class molecule(__builtin__.list) Method resolution order: molecule __builtin__.list __builtin__.object Methods defined here: __str__(self) atoms(self) Returns a list of lines containing the atom records of them mol2. babel(self, format='smi', options='') Converts this mol2 data into another format with an external call to babel2. Returns babel2 output and raises a ValueError if babel exits with an error code (mol2 not in correct format or babel2 couldn't be found. bonds(self) Returns a list of lines containing the bond records of the mol2. coord(self) Returns list of tuples corresponding to coordinates of the atoms. fingerprint(self, bits=1024, path_lengths=6) fingerprint_atom(self, atom_number, bits=6, path_lengths=3) graph(self) Returns a graph represntation of the mol2 file. Output=(verts, edges) verts=dictionary keyed to atom number containing atom type (truncated) edges=dicitonary keyed to atom number containing list of bond tuples (dest atom, bond type) name(self, new_name=None) Returns or sets the molecule's name. score(self, getFingerprint=False, bits=512, header=None) Returns a dictionary containing the scores in the mol2 file in DOCK format. Data and other attributes defined here: __dict__ = <dictproxy object> dictionary for instance variables (if defined) __weakref__ = <attribute '__weakref__' of 'molecule' objects> list of weak references to the object (if defined) Methods inherited from __builtin__.list: __add__(...) x.__add__(y) <==> x+y __contains__(...) x.__contains__(y) <==> y in x __delitem__(...) x.__delitem__(y) <==> del x[y] __delslice__(...) x.__delslice__(i, j) <==> del x[i:j] Use of negative indices is not supported. __eq__(...) x.__eq__(y) <==> x==y __ge__(...) x.__ge__(y) <==> x>=y __getattribute__(...) x.__getattribute__('name') <==> x.name __getitem__(...) x.__getitem__(y) <==> x[y] __getslice__(...) x.__getslice__(i, j) <==> x[i:j] Use of negative indices is not supported. __gt__(...) x.__gt__(y) <==> x>y __hash__(...) x.__hash__() <==> hash(x) __iadd__(...) x.__iadd__(y) <==> x+=y __imul__(...) x.__imul__(y) <==> x*=y __init__(...) x.__init__(...) initializes x; see x.__class__.__doc__ for signature __iter__(...) x.__iter__() <==> iter(x) __le__(...) x.__le__(y) <==> x<=y __len__(...) x.__len__() <==> len(x) __lt__(...) x.__lt__(y) <==> x<y __mul__(...) x.__mul__(n) <==> x*n __ne__(...) x.__ne__(y) <==> x!=y __repr__(...) x.__repr__() <==> repr(x) __rmul__(...) x.__rmul__(n) <==> n*x __setitem__(...) x.__setitem__(i, y) <==> x[i]=y __setslice__(...) x.__setslice__(i, j, y) <==> x[i:j]=y Use of negative indices is not supported. append(...) L.append(object) -- append object to end count(...) L.count(value) -> integer -- return number of occurrences of value extend(...) L.extend(iterable) -- extend list by appending elements from the iterable index(...) L.index(value, [start, [stop]]) -> integer -- return first index of value insert(...) L.insert(index, object) -- insert object before index pop(...) L.pop([index]) -> item -- remove and return item at index (default last) remove(...) L.remove(value) -- remove first occurrence of value reverse(...) L.reverse() -- reverse *IN PLACE* sort(...) L.sort(cmpfunc=None) -- stable sort *IN PLACE*; cmpfunc(x, y) -> -1, 0, 1 Data and other attributes inherited from __builtin__.list: __new__ = <built-in method __new__ of type object> T.__new__(S, ...) -> a new object with type S, a subtype of T Functions MyFileOpen(filename, dash_equals, mode) getmol(f) Data SCORE_RE = <_sre.SRE_Pattern object>