9089
www.ics.uci.edu/%7Ewscacchi/Software-Process/Software-Life-Cycle-Models/PML-Example.htm
process Proposal_Submit { process Proposal_Submit { action submit_proposal { agent { Principal_Investigator } requires { proposal } provides { proposal.contents == file } script {"<p>Submit proposal contents.\ <p>BAA to which this proposal responds: \ <input name='baa' type='string' size=16>\ <p>CBD source for this BAA: \ <input name='cbd' type='string' size=50>\ <br>Proposal title: <input name='title' type='string' size=50>\ <br>Submitting Institution: <input name='institution' type='string' size=25>\ <br>Principal Investigator: <input name='PI' type='string' size=20>\ Email: <input name='PIemail' type='string' size=20>\ <br>Contact: <input name='contact' type='string' size=20>\ Email: <input name='contactEmail' type='string' size=12>\ <br>Proposal contents file: <INPUT NAME='file' TYPE='file'>" } ��� ��� ��� ��� } action submit_budget { agent { Principal_Investigator } requires { proposal } provides { proposal.budget == file } script {"<p>Submit budget.\ <br>Proposal title: <input name='title' type='string' size=50>\ <br>Budget file: <INPUT NAME='file' TYPE='file'>\ <br>Email address of contact: <input name='user_id' type='string'>" } } action submit_certs { agent { Principal_Investigator } requires { proposal } provides { proposal.certs == file && proposal.certifier == user_id } script {"<p>Submit electronically signed certifications.\ <br>File containing signed certifications: <INPUT NAME='file' TYPE='file'>\ <p>User ID of signature: <input name='user_id' type='string'>" ��� ��� ��� ��� ��� ��� ��� ��� } ��� ��� ��� ��� } � }